{"version":3,"sources":["Tablero.js","Partida.js","App.js","serviceWorker.js","index.js"],"names":["Tablero","props","this","tablero","rango_8","i","push","filas","f","fila","c","reverse","id","map","key","click","mov_posibles","pos_seleccionada","String","fromCharCode","charCodeAt","Component","FilaTablero","casillero","Casillero","pos","pieza","piezas","representacion_pieza","color","es_seleccionada","es_posible","findIndex","classes","className","onClick","Partida","click_casillero","bind","reiniciar","state","pieza_seleccionada","jugador","cargar_tablero","data","console","log","p","setState","continua_juego","ganador","fetch","then","response","json","parse_partida_response","error","alert","f0","c0","clear_seleccion","game_state_player","repr_jugador","toUpperCase","game_state","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.378cbc2d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Tablero extends Component {\n  render() {\n    const props = this.props;\n    const tablero = props.tablero;\n    if (tablero === null) return <p>Tablero no cargado...</p>;\n    const rango_8 = [];\n    for (let i = 0; i < 8; i++) {rango_8.push(i);}\n\n    const filas = []\n    for (const f of rango_8) {\n      const fila = [];\n      for (const c of rango_8) {\n        fila.push(tablero[[f,c]]);\n      }\n      filas.push(fila);\n    }\n    filas.reverse();\n    return <div id=\"container_tablero\">\n      <table id=\"tablero\">\n        <tbody>\n          {filas.map((fila, f) =>\n            <FilaTablero key={f}\n                         f={7-f}\n                         fila={fila}\n                         click={props.click}\n                         mov_posibles={props.mov_posibles}\n                         pos_seleccionada={props.pos_seleccionada}/>\n          )}\n          <tr>\n          <td></td>\n          {rango_8.map(i => <td key={i}>{String.fromCharCode('a'.charCodeAt(0) + i)}</td>)}\n          </tr>\n        </tbody>\n      </table>\n    </div>;\n  }\n}\n\nexport const es_mov_posible = function(mov_posibles, pos) {\n  return mov_posibles.findIndex(([f,c]) => f === pos[0] && c === pos[1]) >= 0;\n};\n\nexport const representacion_pieza = function(pieza) {\n  const piezas = {};\n  piezas[['R','B']] = '♔';\n  piezas[['RA','B']] = '♕';\n  piezas[['T','B']] = '♖';\n  piezas[['C','B']] = '♘';\n  piezas[['A','B']] = '♗';\n  piezas[['P','B']] = '♙';\n  piezas[['R','N']] = '♚';\n  piezas[['RA','N']] = '♛';\n  piezas[['T','N']] = '♜';\n  piezas[['C','N']] = '♞';\n  piezas[['A','N']] = '♝';\n  piezas[['P','N']] = '♟︎';\n  return piezas[pieza];\n};\n\nconst FilaTablero = (props) => <tr>\n  <td>{props.f + 1}</td>\n  { props.fila.map((casillero, c) =>\n    <Casillero key={[props.f, c]}\n               f={props.f}\n               c={c}\n               casillero={casillero}\n               mov_posibles={props.mov_posibles}\n               pos_seleccionada={props.pos_seleccionada}\n               click={props.click}/>\n   )}\n</tr>;\n\nclass Casillero extends Component {\n  render() {\n    const props = this.props;\n    const f = props.f;\n    const c = props.c;\n    const casillero = props.casillero;\n    const pos_seleccionada = props.pos_seleccionada;\n    const pieza = representacion_pieza(casillero);\n\n    const color = (f + c) % 2 === 0 ? 'oscuro' : 'claro';\n    const es_seleccionada = pos_seleccionada && pos_seleccionada[0] === f && pos_seleccionada[1] === c;\n    const es_posible = es_mov_posible(props.mov_posibles, [f,c]) && !es_seleccionada;\n    const classes = `casillero ${color} ${es_posible && 'posible'} ${es_seleccionada && 'seleccionada'}`;\n    return <td className={classes} onClick={()=>props.click(f, c)}>{pieza}</td>;\n  }\n}\n\nexport default Tablero;\n","import React, { Component } from 'react';\nimport Tablero, {representacion_pieza} from './Tablero';\n\nclass Partida extends Component {\n  constructor(props) {\n    super(props);\n    this.click_casillero = this.click_casillero.bind(this);\n    this.reiniciar = this.reiniciar.bind(this);\n    this.state = {\n      tablero: null,\n      mov_posibles: [],\n      pos_seleccionada: null,\n      pieza_seleccionada: null,\n      jugador: 'B',\n    }\n    this.click_casillero = this.click_casillero.bind(this);\n  }\n\n  componentDidMount() {this.cargar_tablero();}\n\n  parse_partida_response(data) {\n    console.log(data);\n    const tablero = {}\n    for (const p of data.tablero) {\n      const pos = [p[0], p[1]];\n      const pieza = [p[2], p[3]];\n      tablero[pos] = pieza;\n    }\n    this.setState({\n      tablero: tablero,\n      jugador: data.jugador,\n      continua_juego: data.continua_juego,\n      ganador: data.ganador,\n      mov_posibles: [],\n    });\n    console.log(\"Partida cargada\");\n  }\n\n  cargar_tablero() {\n    fetch('/partida')\n      .then(response => response.json())\n      .then(data => {\n        this.parse_partida_response(data)\n      })\n  }\n\n  click_casillero(f,c) {\n    const state = this.state;\n    const tablero = state.tablero;\n    const pieza = tablero[[f,c]];\n    if (!state.continua_juego) {\n      this.clear_seleccion();\n      return;\n    }\n    if (pieza && pieza[1] === state.jugador) {\n      this.setState({\n        pieza_seleccionada: pieza,\n        pos_seleccionada: [f,c],\n        mov_posibles: [],\n      });\n      fetch(`/movimientos?fila=${f}&col=${c}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.error) {\n            console.error(data.error);\n            alert(data.error);\n            return;\n          }\n          this.setState({mov_posibles: data.mov_posibles});\n        });\n      return;\n    }\n\n    if (state.pos_seleccionada) {\n      const f0 = this.state.pos_seleccionada[0];\n      const c0 = this.state.pos_seleccionada[1];\n      fetch(`/mover?fila=${f0}&col=${c0}&fila2=${f}&col2=${c}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          if (data.error) {\n            console.error(data.error);\n            alert(data.error);\n            return;\n          }\n          this.parse_partida_response(data);\n          this.clear_seleccion();\n        });\n    }\n  }\n\n  clear_seleccion() {\n    this.setState({\n      pieza_seleccionada: null,\n      pos_seleccionada: null,\n      mov_posibles: [],\n    });\n  }\n\n  reiniciar() {\n    fetch('/reiniciar')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        if (data.error) {\n          console.error(data.error);\n          alert(data.error);\n          return;\n        }\n        this.parse_partida_response(data);\n        this.clear_seleccion();\n      });\n  }\n\n  render() {\n    const state=this.state;\n    const game_state_player = repr_jugador(state.ganador ?? state.jugador).toUpperCase();\n    const game_state = (state.ganador ? 'Ganaron' : 'Juegan') + ' las ' + game_state_player;\n    console.log(game_state);\n    return <>\n      <table>\n        <tbody>\n          <tr id=\"main_column\">\n            <td id=\"tableroTD\">\n              <Tablero tablero={state.tablero}\n                mov_posibles={state.mov_posibles}\n                pos_seleccionada={state.pos_seleccionada}\n                click={this.click_casillero}/>\n            </td>\n            <td id=\"infoTD\">\n              <h1>{game_state}</h1>\n              <div>\n                <button onClick={this.reiniciar}>reiniciar</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </>;\n  }\n}\n\nconst repr_jugador = (jugador) => jugador === 'B' ? 'blancas' : 'negras';\n\nexport default Partida;\n","import './App.css';\nimport React from 'react';\nimport Partida from './Partida';\n\nfunction App() {\n  return (\n    <Partida/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}