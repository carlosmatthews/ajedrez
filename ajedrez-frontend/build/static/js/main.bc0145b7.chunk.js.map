{"version":3,"sources":["Tablero.js","Partida.js","App.js","serviceWorker.js","index.js"],"names":["Tablero","props","this","tablero","rango_8","i","push","filas","f","fila","c","reverse","id","map","key","click","mov_posibles","pos_seleccionada","String","fromCharCode","charCodeAt","Component","representacion_pieza","pieza","piezas","FilaTablero","casillero","Casillero","color","es_posible","findIndex","e0","e1","es_seleccionada","classes","className","onClick","Partida","click_casillero","bind","state","pieza_seleccionada","quien_juega","cargar_tablero","setState","pieza_original","otro_color","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bc0145b7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Tablero extends Component {\n  render() {\n    const props = this.props;\n    const tablero = props.tablero;\n    if (tablero === null) return <p>Tablero no cargado...</p>;\n    const rango_8 = [];\n    for (let i = 0; i < 8; i++) {rango_8.push(i);}\n\n    const filas = []\n    for (const f of rango_8) {\n      const fila = [];\n      for (const c of rango_8) {\n        fila.push(tablero[[f,c]]);\n      }\n      filas.push(fila);\n    }\n    filas.reverse();\n    return <div id=\"container_tablero\">\n      <table id=\"tablero\">\n        <tbody>\n          {filas.map((fila, f) =>\n            <FilaTablero key={f}\n                         f={7-f}\n                         fila={fila}\n                         click={props.click}\n                         mov_posibles={props.mov_posibles}\n                         pos_seleccionada={props.pos_seleccionada}/>\n          )}\n          <tr>\n          <td></td>\n          {rango_8.map(i => <td key={i}>{String.fromCharCode('a'.charCodeAt(0) + i)}</td>)}\n          </tr>\n        </tbody>\n      </table>\n    </div>;\n  }\n}\n\nexport const representacion_pieza = function(pieza) {\n  const piezas = {};\n  piezas[['R','B']] = '♔';\n  piezas[['RA','B']] = '♕';\n  piezas[['T','B']] = '♖';\n  piezas[['C','B']] = '♘';\n  piezas[['A','B']] = '♗';\n  piezas[['P','B']] = '♙';\n  piezas[['R','N']] = '♚';\n  piezas[['RA','N']] = '♛';\n  piezas[['T','N']] = '♜';\n  piezas[['C','N']] = '♞';\n  piezas[['A','N']] = '♝';\n  piezas[['P','N']] = '♟︎';\n  return piezas[pieza];\n};\n\nconst FilaTablero = (props) => <tr>\n  <td>{props.f + 1}</td>\n  { props.fila.map((casillero, c) =>\n    <Casillero key={[props.f, c]}\n               f={props.f}\n               c={c}\n               casillero={casillero}\n               mov_posibles={props.mov_posibles}\n               pos_seleccionada={props.pos_seleccionada}\n               click={props.click}/>\n   )}\n</tr>;\n\nclass Casillero extends Component {\n  render() {\n    const props = this.props;\n    const f = props.f;\n    const c = props.c;\n    const casillero = props.casillero;\n    const pos_seleccionada = props.pos_seleccionada;\n    const pieza = representacion_pieza(casillero);\n\n    const color = (f + c) % 2 === 0 ? 'oscuro' : 'claro';\n    const es_posible = props.mov_posibles.findIndex(([e0,e1]) => e0 === f && e1 === c) >= 0;\n    const es_seleccionada = pos_seleccionada && pos_seleccionada[0] === f && pos_seleccionada[1] === c;\n    const classes = `casillero ${color} ${es_posible && 'posible'} ${es_seleccionada && 'seleccionada'}`;\n    return <td className={classes} onClick={()=>props.click(f, c)}>{pieza}</td>;\n  }\n}\n\nexport default Tablero;\n","import React, { Component } from 'react';\nimport Tablero, {representacion_pieza} from './Tablero';\n\nclass Partida extends Component {\n  constructor(props) {\n    super(props);\n    this.click_casillero = this.click_casillero.bind(this);\n    this.state = {\n      tablero: null,\n      mov_posibles: [],\n      pos_seleccionada: null,\n      pieza_seleccionada: null,\n      quien_juega: 'B',\n    }\n    this.click_casillero = this.click_casillero.bind(this);\n  }\n\n  componentDidMount() {this.cargar_tablero();}\n\n  cargar_tablero() {\n    const tablero = {}; // TODO: llamar API de carli\n    tablero[[1,0]] = ['P', 'B'];\n    tablero[[1,1]] = ['P', 'B'];\n    tablero[[0,0]] = ['T', 'B'];\n    tablero[[0,1]] = ['C', 'B'];\n    tablero[[0,2]] = ['A', 'B'];\n    tablero[[0,3]] = ['RA', 'B'];\n    tablero[[0,4]] = ['R', 'B'];\n\n    tablero[[6,7]] = ['P', 'N'];\n    tablero[[7,0]] = ['T', 'N'];\n    tablero[[7,1]] = ['C', 'N'];\n    tablero[[7,2]] = ['A', 'N'];\n    tablero[[7,3]] = ['RA', 'N'];\n    tablero[[7,4]] = ['R', 'N'];\n    this.setState({tablero: tablero});\n  }\n\n  click_casillero(f,c) {\n    const state = this.state;\n    const tablero = state.tablero;\n    const pieza = tablero[[f,c]];\n    if (!state.pos_seleccionada) {\n      if (pieza && pieza[1] === state.quien_juega) {\n        this.setState({\n          pieza_seleccionada: pieza,\n          pos_seleccionada: [f,c],\n        });\n      }\n    } else if (pieza && pieza[1] === state.quien_juega) {\n      this.setState({\n        pieza_seleccionada: pieza,\n        pos_seleccionada: [f,c],\n      });\n    } else {\n      //chequear if movimiento posible\n      const pieza_original = tablero[state.pos_seleccionada];\n      delete tablero[state.pos_seleccionada];\n      tablero[[f,c]] = pieza_original;\n      this.setState({\n        pieza_seleccionada: null,\n        pos_seleccionada: null,\n        quien_juega: otro_color(state.quien_juega),\n      });\n      this.setState({})\n    }\n  }\n\n  render() {\n    const state=this.state;\n    return <>\n      <h3>Juega {state.quien_juega === 'B' ? 'BLANCAS' : 'NEGRAS'}</h3>\n      <Tablero tablero={state.tablero}\n               mov_posibles={state.mov_posibles}\n               pos_seleccionada={state.pos_seleccionada}\n               click={this.click_casillero}/>\n      {state.pieza_seleccionada && <>\n        <h3>Pieza Seleccionada: <span className=\"pieza\">{representacion_pieza(state.pieza_seleccionada)}</span></h3>\n        </>}\n    </>;\n  }\n}\n\nconst otro_color = (color) => color === 'B' ? 'N' : 'B';\n\nexport default Partida;\n","import './App.css';\nimport React from 'react';\nimport Partida from './Partida';\n\nfunction App() {\n  return (\n    <Partida/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}